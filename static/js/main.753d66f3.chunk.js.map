{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","backdrop","zIndex","color","card","boxShadow","App","classes","React","useState","stories","setStories","authors","setAuthors","isLoading","setIsLoading","isError","setIsError","getData","a","fetch","storiesResponse","json","allStories","shuffledStories","sort","Math","random","selectedStoriesId","slice","selectedStories","i","length","storyResponse","push","sortedSelectedStories","b","parseFloat","score","selectedAuthors","selectedAuthorsId","map","item","by","authorResponse","useEffect","Grid","container","justify","spacing","Backdrop","className","open","CircularProgress","xs","Typography","variant","component","align","story","index","key","id","md","Link","href","url","target","underline","Card","CardContent","title","karma","unixTimestamp","time","Date","toLocaleString","month","day","year","ReactDOM","render","document","getElementById"],"mappings":"wUAUMA,EAAYC,YAAW,CACzBC,SAAU,CACNC,OAAQ,EACRC,MAAO,QAEXC,KAAM,CACF,UAAW,CACPC,UAAW,2CA6GRC,MAxGf,WACI,IAAMC,EAAUR,IADL,EAEmBS,IAAMC,SAAS,IAFlC,mBAEJC,EAFI,KAEKC,EAFL,OAGmBH,IAAMC,SAAS,IAHlC,mBAGJG,EAHI,KAGKC,EAHL,OAIuBJ,oBAAS,GAJhC,mBAIJK,EAJI,KAIOC,EAJP,OAKmBN,oBAAS,GAL5B,mBAKJO,EALI,KAKKC,EALL,KAwBLC,EAAO,uCAAG,kDAAAC,EAAA,+EAEsBC,MAC1B,yDAHI,cAEFC,EAFE,gBAKiBA,EAAgBC,OALjC,OAKFC,EALE,OAMFC,EAAgCD,EAvBKE,MAAK,iBAAM,GAAMC,KAAKC,YAwB3DC,EAAoBJ,EAAgBK,MAAM,EAAG,IAC7CC,EAAkB,GACfC,EAAI,EATL,aASQA,EAAIH,EAAkBI,QAT9B,kCAUwBZ,MAAM,8CAAD,OACiBQ,EAAkBG,GADnC,UAV7B,eAUEE,EAVF,YAaJH,EAbI,UAauBG,EAAcX,OAbrC,yBAaYY,KAbZ,wBASsCH,GAAK,EAT3C,wBAeFI,EAfE,UAe0BL,GAClBK,EAnBPV,MAAK,SAACN,EAAGiB,GAAJ,OAAUC,WAAWlB,EAAEmB,OAASD,WAAWD,EAAEE,UAoBrDC,EAAkB,GAClBC,EAAoBL,EAAsBM,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAC1DZ,EAAI,EAnBL,aAmBQA,EAAIS,EAAkBR,QAnB9B,kCAoByBZ,MAAM,8CAAD,OACgBoB,EAAkBT,GADlC,UApB9B,eAoBEa,EApBF,YAuBJL,EAvBI,UAuBuBK,EAAetB,OAvBtC,yBAuBYY,KAvBZ,wBAmBsCH,GAAK,EAnB3C,wBAyBRpB,EAAWwB,GACXtB,EAAW0B,GA1BH,kDA4BRtB,GAAW,GA5BH,yBA8BRF,GAAa,GA9BL,6EAAH,qDAsCb,OAJA8B,qBAAU,WACN3B,MACD,IAGC,oCACI,kBAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACrCjC,GAAW,yDACXF,EACG,kBAACoC,EAAA,EAAD,CAAUC,UAAW5C,EAAQN,SAAUmD,KAAMtC,GACzC,kBAACuC,EAAA,EAAD,CAAkBlD,MAAM,aAG5B,oCACI,kBAAC2C,EAAA,EAAD,CAAMJ,MAAI,EAACY,GAAI,IACX,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAA9C,mBAIHhD,EAAQ+B,KAAI,SAACkB,EAAOC,GAAR,OACT,kBAACd,EAAA,EAAD,CAAMe,IAAKF,EAAMG,GAAIpB,MAAI,EAACY,GAAI,GAAIS,GAAI,GAClC,kBAACC,EAAA,EAAD,CAAMC,KAAMN,EAAMO,IAAKC,OAAO,SAASC,UAAU,QAC7C,kBAACC,EAAA,EAAD,CAAMlB,UAAW5C,EAAQH,MACrB,kBAACkE,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAC9BE,EAAMY,OAEX,kBAAChB,EAAA,EAAD,qBAA0BI,EAAMrB,OAChC,kBAACiB,EAAA,EAAD,CAAYE,UAAU,KAAtB,WACa7C,EAAQgD,GAAOE,GAD5B,MACmClD,EAAQgD,GAAOY,OAElD,kBAACjB,EAAA,EAAD,CAAYE,UAAU,KAAtB,eAhFnBgB,EAiF+Cd,EAAMe,KA/EnD,IAAIC,KADc,IAAhBF,GAOHG,eAAe,QALjB,CACZC,MAAO,UACPC,IAAK,UACLC,KAAM,kBANM,IAACN,SC1BzBO,IAASC,OAEL,kBAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.753d66f3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles({\n    backdrop: {\n        zIndex: 9,\n        color: '#fff',\n    },\n    card: {\n        '&:hover': {\n            boxShadow: '0px 6px 12px 0px rgba(184,178,184,1)',\n        },\n    },\n})\n\nfunction App() {\n    const classes = useStyles()\n    const [stories, setStories] = React.useState([])\n    const [authors, setAuthors] = React.useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n\n    const randomizeData = (initialData) => initialData.sort(() => 0.5 - Math.random())\n\n    const convertTime = (unixTimestamp) => {\n        const milliseconds = unixTimestamp * 1000\n        const dateObject = new Date(milliseconds)\n        const options = {\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric',\n        }\n        return dateObject.toLocaleString('en-US', options)\n    }\n\n    const sortAscendingly = (storiesArray) => {\n        storiesArray.sort((a, b) => parseFloat(a.score) - parseFloat(b.score))\n    }\n\n    const getData = async () => {\n        try {\n            const storiesResponse = await fetch(\n                'https://hacker-news.firebaseio.com/v0/topstories.json'\n            )\n            const allStories = await storiesResponse.json() // parse JSON\n            const shuffledStories = randomizeData(allStories)\n            const selectedStoriesId = shuffledStories.slice(0, 10)\n            const selectedStories = []\n            for (let i = 0; i < selectedStoriesId.length; i += 1) {\n                const storyResponse = await fetch(\n                    `https://hacker-news.firebaseio.com/v0/item/${selectedStoriesId[i]}.json`\n                )\n                selectedStories.push(await storyResponse.json())\n            }\n            const sortedSelectedStories = [...selectedStories]\n            sortAscendingly(sortedSelectedStories)\n            const selectedAuthors = []\n            const selectedAuthorsId = sortedSelectedStories.map((item) => item.by)\n            for (let i = 0; i < selectedAuthorsId.length; i += 1) {\n                const authorResponse = await fetch(\n                    `https://hacker-news.firebaseio.com/v0/user/${selectedAuthorsId[i]}.json`\n                )\n                selectedAuthors.push(await authorResponse.json())\n            }\n            setStories(sortedSelectedStories)\n            setAuthors(selectedAuthors)\n        } catch (error) {\n            setIsError(true)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    return (\n        <>\n            <Grid container justify='center' spacing={3}>\n                {isError && <div>Something went wrong ...</div>}\n                {isLoading ? (\n                    <Backdrop className={classes.backdrop} open={isLoading}>\n                        <CircularProgress color='inherit' />\n                    </Backdrop>\n                ) : (\n                    <>\n                        <Grid item xs={12}>\n                            <Typography variant='h3' component='h1' align='center'>\n                                10 Hacker News\n                            </Typography>\n                        </Grid>\n                        {stories.map((story, index) => (\n                            <Grid key={story.id} item xs={12} md={5}>\n                                <Link href={story.url} target='_blank' underline='none'>\n                                    <Card className={classes.card}>\n                                        <CardContent>\n                                            <Typography variant='h5' component='h3'>\n                                                {story.title}\n                                            </Typography>\n                                            <Typography>Story score: {story.score}</Typography>\n                                            <Typography component='p'>\n                                                Author: {authors[index].id} - {authors[index].karma}\n                                            </Typography>\n                                            <Typography component='p'>\n                                                Published: {convertTime(story.time)}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </Link>\n                            </Grid>\n                        ))}\n                    </>\n                )}\n            </Grid>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}